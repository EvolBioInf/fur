#+begin_src latex
  \section{Introduction}
  The program \texttt{primer3} generates output in its own
  format. However, primer sequences are subsequently often checked using
  BLAST, which requires input in FASTA format. The program
  \texttt{prim2fasta} extracts primer pairs from \texttt{primer3}
  output and writes each pair in a separate file for subsequent
  checking.

  \section{Implementation}
  The program requests the base name of the output files, \texttt{b},
  and then prints each primer-pair in a file called \texttt{b1.fasta},
  \texttt{b2.fasta}, and so on.
  \bpr{prim2fasta}{prim2fasta}
#+end_src
#+begin_src awk <<prim2fasta>>=
  #!/usr/bin/awk -f
  BEGIN {
    <<Request base name, P. \ref{prim2fasta}>>
  }
  <<Extract forward primer, P. \ref{prim2fasta}>>
  <<Extract reverse primer, P. \ref{prim2fasta}>>
#+end_src
#+begin_src latex
  \epr
  If no base name is supplied, the user is prompted for one.
#+end_src
#+begin_src awk <<Request base name, P. \ref{prim2fasta}>>=
  if (!file) {
    print "prim2fasta: Extract primer sequences from primer3 output"
    print "Usage: prim2fasta -v file=<fileBaseName> primer3.out"
    exit
  }
#+end_src
#+begin_src latex
  The forward primer is reported as, for example
  \begin{verbatim}
  PRIMER_LEFT_0_SEQUENCE=TTCTGTATCGTTTCTCCA
  \end{verbatim}
  It is printed before the reverse primer, so encountering a forward
  primer opens a new file.
#+end_src
#+begin_src awk <<Extract forward primer, P. \ref{prim2fasta}>>=
  /PRIMER_LEFT_.*_SEQUENCE/ {
    n++
    f = file n ".fasta"
    print "Writing", f
    printf ">f%d\n", n > f
    split($1, a, "=")
    printf "%s\n", a[2] >> f
  }
#+end_src
#+begin_src latex
  The reverse primer is extracted in a similar way, except that now the
  output file is closed rather than opened.
#+end_src
#+begin_src awk <<Extract reverse primer, P. \ref{prim2fasta}>>=
  /PRIMER_RIGHT_.*_SEQUENCE/ {
    printf ">r%d\n", n >> f
    split($1, a, "=")
    printf "%s\n", a[2] >> f
    close(f)
  }
#+end_src
